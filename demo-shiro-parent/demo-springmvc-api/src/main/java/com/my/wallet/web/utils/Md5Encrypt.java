package com.my.wallet.web.utils;import java.io.UnsupportedEncodingException;import java.security.MessageDigest;import java.security.NoSuchAlgorithmException;public class Md5Encrypt{    /**     * Used building output as Hex     */    private static final char[] DIGITS = { '0', '1', '2', '3', '4', '5', '6',            '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };    /**     * 对字符串进行MD5加密     *      * @param text     * @return 密文     */    public static String md5(String text)    {        MessageDigest msgDigest = null;        try        {            msgDigest = MessageDigest.getInstance("MD5");        }        catch (NoSuchAlgorithmException e)        {            throw new IllegalStateException(                    "System doesn't support MD5 algorithm.");        }        msgDigest.update(text.getBytes());        byte[] bytes = msgDigest.digest();        String md5Str = new String(encodeHex(bytes));        return md5Str;    }    /**     * 此加密方式用于二维码 对字符串进行MD5加密     *      * @param text     *            明文     * @return 密文     */    public static String md5(String text, String inputCharset)    {        MessageDigest msgDigest = null;        try        {            msgDigest = MessageDigest.getInstance("MD5");        }        catch (NoSuchAlgorithmException e)        {            throw new IllegalStateException(                    "System doesn't support MD5 algorithm.");        }        try        {            msgDigest.update(text.getBytes(inputCharset)); // 注意改接口是按照utf-8编码形式加密        }        catch (UnsupportedEncodingException e)        {            throw new IllegalStateException(                    "System doesn't support your  EncodingException.");        }        byte[] bytes = msgDigest.digest();        String md5Str = new String(encodeHex(bytes));        return md5Str;    }    public static char[] encodeHex(byte[] data)    {        int l = data.length;        char[] out = new char[l << 1];        // two characters form the hex value.        for (int i = 0, j = 0; i < l; i++)        {            out[j++] = DIGITS[(0xF0 & data[i]) >>> 4];            out[j++] = DIGITS[0x0F & data[i]];        }        return out;    }    public static void main(String[] args)    {    	String data = "idCard=420682198407084528&subject=ICBC&cardAttr=01&transAmt=0.1&bankCode=ICBC&cardNo=6212263301007816126&goodsUrl=ICBC&outAcctId=2000001&validDate=null&merchantName=测试企业商户&merchantId=001015013101118&fullName=李莉&cvv2=null&outOrderId=10001&mobile=13898128039";        System.out.println("sign===" + md5(data));    }}