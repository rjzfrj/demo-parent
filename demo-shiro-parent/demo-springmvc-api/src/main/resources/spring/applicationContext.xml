<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
   	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
   	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
   	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
   	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd 
   	http://www.springframework.org/schema/rabbit
   	http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
   	">
	<!-- 激活spring的注解. -->
	<context:annotation-config />
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
				<!-- <value>classpath:jdbc.properties</value>
				<value>classpath:redis.properties</value> -->
			</list>
		</property>
	</bean>
	<!-- 
	Oracle的数据库配置
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		  <property name="user" value="${jdbc.username}" />
		  <property name="password" value="${jdbc.password}" />
		  <property name="driverClass" value="${jdbc.driverClassName}" />
		  <property name="jdbcUrl" value="${jdbc.url}" />

		  指定连接数据库连接池的最小连接数
		  <property name="minPoolSize" value="10" />
		  指定连接数据库连接池的最大连接数
		  <property name="maxPoolSize" value="30" />
		  指定连接数据库连接池的连接的最大空闲时间
		  <property name="maxIdleTime" value="1800" />
		  <property name="acquireIncrement" value="2" />
		  <property name="maxStatements" value="0" />
		  指定连接数据库连接池的初始化连接数
		  <property name="initialPoolSize" value="10" />
		  <property name="idleConnectionTestPeriod" value="1800" />
		  <property name="acquireRetryAttempts" value="30" />
		  断开后不重连，true不重连
		  <property name="breakAfterAcquireFailure" value="false" />
		  <property name="testConnectionOnCheckout" value="false" />
	 </bean>
	
	spring 的事务处理类配置
	<bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>
    
    创建SqlSessionFactory，同时指定数据源  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:spring/mybatis-config.xml" />
    </bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.my.wallet.web.dao" />
	</bean> -->
	
	<!-- 业务使用类 -->
	<bean id="homeService" class="com.my.wallet.web.service.impl.HomeServiceImpl"></bean>
	
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="3" />
		<property name="keepAliveSeconds" value="200" />
		<property name="maxPoolSize" value="5" />
		<property name="queueCapacity" value="25" />
	</bean>
	
	<!-- 	 -->
	
	<!-- -->
	<rabbit:connection-factory id="connectionFactory"
		host="${rabbit_address}" username="${rabbit_username}" password="${rabbit_password}"
		port="${rabbit_port}" />

	<rabbit:admin connection-factory="connectionFactory" />

	<rabbit:queue id="walletQueue" durable="true" auto-delete="false"
		exclusive="false" name="walletQueue" />

	<rabbit:direct-exchange name="my-mq-exchange" durable="true" auto-delete="false" id="my-mq-exchange">
		<rabbit:bindings>
			<rabbit:binding queue="walletQueue" key="walletQueue_key" />
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<bean id="jacksonConverter"
		class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />

	<bean id="finaNoticeListener" class="com.my.wallet.web.utils.FinaNoticeListener" />
	<!-- queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
	<rabbit:listener-container
		connection-factory="connectionFactory" acknowledge="auto"
		task-executor="taskExecutor">
		<rabbit:listener queues="walletQueue" ref="finaNoticeListener" />
	</rabbit:listener-container>
	 
	<!-- redis 
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="${redis.pool.maxActive}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWait" value="${redis.pool.maxWait}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>
	<bean class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory" />
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" p:connection-factory-ref="jedisConnectionFactory" />
	-->
	<!-- redis -->
  <!--   <import resource="classpath:spring/spring-quartz.xml" /> -->
</beans>