package com.allscore.wireless.dao;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class MerchantRateExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    protected Integer limitStart;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    protected Integer limitEnd;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public MerchantRateExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public void setLimitStart(Integer limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public Integer getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public void setLimitEnd(Integer limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public Integer getLimitEnd() {
        return limitEnd;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIDIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIDIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIDEqualTo(String value) {
            addCriterion("ID =", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotEqualTo(String value) {
            addCriterion("ID <>", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThan(String value) {
            addCriterion("ID >", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThan(String value) {
            addCriterion("ID <", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLike(String value) {
            addCriterion("ID like", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotLike(String value) {
            addCriterion("ID not like", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDIn(List<String> values) {
            addCriterion("ID in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotIn(List<String> values) {
            addCriterion("ID not in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODEIsNull() {
            addCriterion("MERCHANT_CODE is null");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODEIsNotNull() {
            addCriterion("MERCHANT_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODEEqualTo(String value) {
            addCriterion("MERCHANT_CODE =", value, "MERCHANT_CODE");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODENotEqualTo(String value) {
            addCriterion("MERCHANT_CODE <>", value, "MERCHANT_CODE");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODEGreaterThan(String value) {
            addCriterion("MERCHANT_CODE >", value, "MERCHANT_CODE");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODEGreaterThanOrEqualTo(String value) {
            addCriterion("MERCHANT_CODE >=", value, "MERCHANT_CODE");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODELessThan(String value) {
            addCriterion("MERCHANT_CODE <", value, "MERCHANT_CODE");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODELessThanOrEqualTo(String value) {
            addCriterion("MERCHANT_CODE <=", value, "MERCHANT_CODE");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODELike(String value) {
            addCriterion("MERCHANT_CODE like", value, "MERCHANT_CODE");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODENotLike(String value) {
            addCriterion("MERCHANT_CODE not like", value, "MERCHANT_CODE");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODEIn(List<String> values) {
            addCriterion("MERCHANT_CODE in", values, "MERCHANT_CODE");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODENotIn(List<String> values) {
            addCriterion("MERCHANT_CODE not in", values, "MERCHANT_CODE");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODEBetween(String value1, String value2) {
            addCriterion("MERCHANT_CODE between", value1, value2, "MERCHANT_CODE");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_CODENotBetween(String value1, String value2) {
            addCriterion("MERCHANT_CODE not between", value1, value2, "MERCHANT_CODE");
            return (Criteria) this;
        }

        public Criteria andCHN_CODEIsNull() {
            addCriterion("CHN_CODE is null");
            return (Criteria) this;
        }

        public Criteria andCHN_CODEIsNotNull() {
            addCriterion("CHN_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andCHN_CODEEqualTo(String value) {
            addCriterion("CHN_CODE =", value, "CHN_CODE");
            return (Criteria) this;
        }

        public Criteria andCHN_CODENotEqualTo(String value) {
            addCriterion("CHN_CODE <>", value, "CHN_CODE");
            return (Criteria) this;
        }

        public Criteria andCHN_CODEGreaterThan(String value) {
            addCriterion("CHN_CODE >", value, "CHN_CODE");
            return (Criteria) this;
        }

        public Criteria andCHN_CODEGreaterThanOrEqualTo(String value) {
            addCriterion("CHN_CODE >=", value, "CHN_CODE");
            return (Criteria) this;
        }

        public Criteria andCHN_CODELessThan(String value) {
            addCriterion("CHN_CODE <", value, "CHN_CODE");
            return (Criteria) this;
        }

        public Criteria andCHN_CODELessThanOrEqualTo(String value) {
            addCriterion("CHN_CODE <=", value, "CHN_CODE");
            return (Criteria) this;
        }

        public Criteria andCHN_CODELike(String value) {
            addCriterion("CHN_CODE like", value, "CHN_CODE");
            return (Criteria) this;
        }

        public Criteria andCHN_CODENotLike(String value) {
            addCriterion("CHN_CODE not like", value, "CHN_CODE");
            return (Criteria) this;
        }

        public Criteria andCHN_CODEIn(List<String> values) {
            addCriterion("CHN_CODE in", values, "CHN_CODE");
            return (Criteria) this;
        }

        public Criteria andCHN_CODENotIn(List<String> values) {
            addCriterion("CHN_CODE not in", values, "CHN_CODE");
            return (Criteria) this;
        }

        public Criteria andCHN_CODEBetween(String value1, String value2) {
            addCriterion("CHN_CODE between", value1, value2, "CHN_CODE");
            return (Criteria) this;
        }

        public Criteria andCHN_CODENotBetween(String value1, String value2) {
            addCriterion("CHN_CODE not between", value1, value2, "CHN_CODE");
            return (Criteria) this;
        }

        public Criteria andRATEIsNull() {
            addCriterion("RATE is null");
            return (Criteria) this;
        }

        public Criteria andRATEIsNotNull() {
            addCriterion("RATE is not null");
            return (Criteria) this;
        }

        public Criteria andRATEEqualTo(BigDecimal value) {
            addCriterion("RATE =", value, "RATE");
            return (Criteria) this;
        }

        public Criteria andRATENotEqualTo(BigDecimal value) {
            addCriterion("RATE <>", value, "RATE");
            return (Criteria) this;
        }

        public Criteria andRATEGreaterThan(BigDecimal value) {
            addCriterion("RATE >", value, "RATE");
            return (Criteria) this;
        }

        public Criteria andRATEGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("RATE >=", value, "RATE");
            return (Criteria) this;
        }

        public Criteria andRATELessThan(BigDecimal value) {
            addCriterion("RATE <", value, "RATE");
            return (Criteria) this;
        }

        public Criteria andRATELessThanOrEqualTo(BigDecimal value) {
            addCriterion("RATE <=", value, "RATE");
            return (Criteria) this;
        }

        public Criteria andRATEIn(List<BigDecimal> values) {
            addCriterion("RATE in", values, "RATE");
            return (Criteria) this;
        }

        public Criteria andRATENotIn(List<BigDecimal> values) {
            addCriterion("RATE not in", values, "RATE");
            return (Criteria) this;
        }

        public Criteria andRATEBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RATE between", value1, value2, "RATE");
            return (Criteria) this;
        }

        public Criteria andRATENotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RATE not between", value1, value2, "RATE");
            return (Criteria) this;
        }

        public Criteria andCREATE_DATEIsNull() {
            addCriterion("CREATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andCREATE_DATEIsNotNull() {
            addCriterion("CREATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andCREATE_DATEEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE =", value, "CREATE_DATE");
            return (Criteria) this;
        }

        public Criteria andCREATE_DATENotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE <>", value, "CREATE_DATE");
            return (Criteria) this;
        }

        public Criteria andCREATE_DATEGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATE_DATE >", value, "CREATE_DATE");
            return (Criteria) this;
        }

        public Criteria andCREATE_DATEGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE >=", value, "CREATE_DATE");
            return (Criteria) this;
        }

        public Criteria andCREATE_DATELessThan(Date value) {
            addCriterionForJDBCDate("CREATE_DATE <", value, "CREATE_DATE");
            return (Criteria) this;
        }

        public Criteria andCREATE_DATELessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATE_DATE <=", value, "CREATE_DATE");
            return (Criteria) this;
        }

        public Criteria andCREATE_DATEIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_DATE in", values, "CREATE_DATE");
            return (Criteria) this;
        }

        public Criteria andCREATE_DATENotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATE_DATE not in", values, "CREATE_DATE");
            return (Criteria) this;
        }

        public Criteria andCREATE_DATEBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "CREATE_DATE");
            return (Criteria) this;
        }

        public Criteria andCREATE_DATENotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "CREATE_DATE");
            return (Criteria) this;
        }

        public Criteria andUPDATE_DATEIsNull() {
            addCriterion("UPDATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andUPDATE_DATEIsNotNull() {
            addCriterion("UPDATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andUPDATE_DATEEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_DATE =", value, "UPDATE_DATE");
            return (Criteria) this;
        }

        public Criteria andUPDATE_DATENotEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_DATE <>", value, "UPDATE_DATE");
            return (Criteria) this;
        }

        public Criteria andUPDATE_DATEGreaterThan(Date value) {
            addCriterionForJDBCDate("UPDATE_DATE >", value, "UPDATE_DATE");
            return (Criteria) this;
        }

        public Criteria andUPDATE_DATEGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_DATE >=", value, "UPDATE_DATE");
            return (Criteria) this;
        }

        public Criteria andUPDATE_DATELessThan(Date value) {
            addCriterionForJDBCDate("UPDATE_DATE <", value, "UPDATE_DATE");
            return (Criteria) this;
        }

        public Criteria andUPDATE_DATELessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UPDATE_DATE <=", value, "UPDATE_DATE");
            return (Criteria) this;
        }

        public Criteria andUPDATE_DATEIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_DATE in", values, "UPDATE_DATE");
            return (Criteria) this;
        }

        public Criteria andUPDATE_DATENotIn(List<Date> values) {
            addCriterionForJDBCDate("UPDATE_DATE not in", values, "UPDATE_DATE");
            return (Criteria) this;
        }

        public Criteria andUPDATE_DATEBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_DATE between", value1, value2, "UPDATE_DATE");
            return (Criteria) this;
        }

        public Criteria andUPDATE_DATENotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UPDATE_DATE not between", value1, value2, "UPDATE_DATE");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated do_not_delete_during_merge Thu Jan 21 10:36:32 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERCHANT_RATE
     *
     * @mbggenerated Thu Jan 21 10:36:32 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}